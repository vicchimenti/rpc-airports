/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _AIRPORTS_H_RPCGEN
#define _AIRPORTS_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


typedef struct airportnode *airport;

typedef char airport_code[4];

typedef char city_name[64];

typedef char state_initials[3];

struct airportnode {
	airport_code airport;
	city_name city;
	state_initials state;
	double distance;
	airport next;
};
typedef struct airportnode airportnode;

struct coordinates {
	double lat;
	double lon;
};
typedef struct coordinates coordinates;

struct airports_ret {
	int err;
	union {
		airport airport;
	} airports_ret_u;
};
typedef struct airports_ret airports_ret;

#define AIRPORTS_PROG 0x20000026
#define AIRPORTS_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define GETAIRPORTS 1
extern  airports_ret * getairports_1(coordinates *, CLIENT *);
extern  airports_ret * getairports_1_svc(coordinates *, struct svc_req *);
extern int airports_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define GETAIRPORTS 1
extern  airports_ret * getairports_1();
extern  airports_ret * getairports_1_svc();
extern int airports_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_airport (XDR *, airport*);
extern  bool_t xdr_airport_code (XDR *, airport_code);
extern  bool_t xdr_city_name (XDR *, city_name);
extern  bool_t xdr_state_initials (XDR *, state_initials);
extern  bool_t xdr_airportnode (XDR *, airportnode*);
extern  bool_t xdr_coordinates (XDR *, coordinates*);
extern  bool_t xdr_airports_ret (XDR *, airports_ret*);

#else /* K&R C */
extern bool_t xdr_airport ();
extern bool_t xdr_airport_code ();
extern bool_t xdr_city_name ();
extern bool_t xdr_state_initials ();
extern bool_t xdr_airportnode ();
extern bool_t xdr_coordinates ();
extern bool_t xdr_airports_ret ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_AIRPORTS_H_RPCGEN */
